用Java VM测试

pragma solidity ^0.4.0;

contract Payroll {
    uint salary;
    address boss = 0xca35b7d915458ef540ade6068dfe2f44e8fa733c;
    address employee;
    uint constant payDuration = 10 seconds;
    uint lastPayday = now;
    
    function changeEmployee(address e, uint s) {
        //throw if the condition is not met
        require(msg.sender == boss);
        
        if (employee != 0x0) {
            uint payment = salary * (now - lastPayday) / payDuration;
            employee.transfer(payment);
        }
        
        employee = e;
        salary = s * 1 ether;
        lastPayday = now;
    }
    
    function addfund() payable returns(uint) {
       return this.balance;
    }
    
    function calculateRunway() returns (uint) {
        return this.balance / salary;
    }
    
    function hasEnoughFund() returns(bool) {
        return this.calculateRunway() > 0;
    }
    
    function getPaid() {
        if(msg.sender != employee) {
            revert();
        }
        uint nextPayDay = lastPayday + payDuration;
        if(nextPayDay > now) {
            revert();
        }
        
        lastPayday = nextPayDay;
        employee.transfer(salary);
    }
}

